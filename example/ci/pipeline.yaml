resource_types:
  - name: email
    type: docker-image
    source:
      repository: pcfseceng/email-resource
      tag: 1.0.19

  - name: teams-notification
    type: docker-image
    source:
      repository: nexeck/concourse-teams-resource
      tag: latest

resources:
  - name: source
    type: git
    source:
      uri: ((git_source))
      private_key: ((privatekey))
      branch: ((git_branch))
      skip_ssl_verification: ((git_skip_ssl_verification))

  - name: image-bb-gitversion-tool
    type: docker-image
    source:
      repository: elbb/bb-gitversion
      tag: ((bb_gitversion_version))

  - name: s3-gitversion
    type: s3
    source:
      bucket: ((bb_name))
      endpoint: ((s3_endpoint))
      regexp: gitversion/gitversion-(.*).tar.gz
      access_key_id: ((s3_access_key))
      secret_access_key: ((s3_secret_key))
      disable_ssl: ((s3_skip_ssl_verification))

  - name: image-aws-cli
    type: docker-image
    source:
      repository: amazon/aws-cli
      tag: 2.0.22

  - name: image-((bb_name))
    type: docker-image
    source:
      repository: ((bb_docker_namespace))/((bb_name))
      username: ((registry_user))
      password: ((registry_password))
      insecure_registries: ((bb_insecure_registries))

  - name: send-an-email
    type: email
    source:
      smtp:
        host: ((email_smtp_host_url))
        port: ((email_smtp_port))
        anonymous: ((email_smtp_anonymous))
        username: ((email_smtp_user))
        password: ((email_smtp_pw))
        skip_ssl_validation: ((email_smtp_skip_ssl_validation))
        ca_cert: ((email_smtp_ca_cert))
        host_origin: ((email_smtp_host_origin))
        login_auth: ((email_smtp_login_auth))
      from:  ((email_from))
      to: ((email_to))

  - name: alert
    type: teams-notification
    source:
      url: ((ms_teams_channel_url))

jobs:
  - name: Generate gitversion and put it on S3
    public: true

    on_abort:
      put: send-an-email
      params:
        subject_text: "ci ${BUILD_PIPELINE_NAME}: build ${BUILD_ID} aborted!"
        body_text: |
          Uups!
          Build ID: "${BUILD_ID}"
          Build Name: "${BUILD_NAME}"
          Build Job Name: "${BUILD_JOB_NAME}"
          Build Pipeline Name: "${BUILD_PIPELINE_NAME}"
          ATC External URL: "${ATC_EXTERNAL_URL}"

      put: alert
      params:
        status: abort
        text: |
         [$BUILD_PIPELINE_NAME/BUILD_JOB_NAME #$BUILD_NAME]($ATC_EXTERNAL_URL/builds/$BUILD_ID) aborted. :-(

    on_failure:
      put: send-an-email
      params:
        subject_text: "ci ${BUILD_PIPELINE_NAME}: build ${BUILD_ID} failed!"
        body_text: |
          Oh no!
          Build ID: "${BUILD_ID}"
          Build Name: "${BUILD_NAME}"
          Build Job Name: "${BUILD_JOB_NAME}"
          Build Pipeline Name: "${BUILD_PIPELINE_NAME}"
          ATC External URL: "${ATC_EXTERNAL_URL}"

      put: alert
      params:
        status: failure
        text: |
         [$BUILD_PIPELINE_NAME/BUILD_JOB_NAME #$BUILD_NAME]($ATC_EXTERNAL_URL/builds/$BUILD_ID) failed. :-(

    plan:
      - in_parallel:
          - get: image-bb-gitversion-tool
          - get: source
            trigger: true
          - get: image-aws-cli
      - task: Generate version
        image: image-bb-gitversion-tool
        config:
          platform: linux
          inputs:
            - name: source
          outputs:
            - name: gitversion
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                entrypoint.sh &&
                jq empty gitversion/json/gitversion.json &&
                cat gitversion/json/gitversion.json &&
                tar cvfz gitversion/gitversion-$(cat gitversion/plain/BranchVersion).tar.gz gitversion/*
          params:
            GIT_PATH: source
            GEN_PATH: gitversion
      - task: Check/Create bucket for ((bb_name)) on S3
        image: image-aws-cli
        config:
          platform: linux
          run:
            path: /bin/bash
            args:
              - -xc
              - |
                mkdir -p ~/.aws
                # hide setting credentials in plain text in concourse ui
                set +x
                export TERM="xterm-256color"
                echo "[default]" > ~/.aws/credentials
                echo "aws_access_key_id=((s3_access_key))" >> ~/.aws/credentials
                echo "aws_secret_access_key=((s3_secret_key))" >> ~/.aws/credentials
                set -x
                # check if bucket exists on s3 endpoint. If not create one
                aws --endpoint-url ((s3_endpoint)) s3api head-bucket --bucket ((bb_name)) 2> /dev/null
                if [ $? != 0 ]; then aws s3 mb s3://((bb_name)) --endpoint-url ((s3_endpoint)); fi
      - put: s3-gitversion
        params:
          file: gitversion/gitversion-*.tar.gz
          acl: public-read

  - name: Create docker image for ((bb_name)) and push it
    public: true

    on_success:
      put: send-an-email
      params:
        subject_text: "ci ${BUILD_PIPELINE_NAME}: build ${BUILD_ID} success!"
        body_text: |
          Oh yes!
          Build ID: "${BUILD_ID}"
          Build Name: "${BUILD_NAME}"
          Build Job Name: "${BUILD_JOB_NAME}"
          Build Pipeline Name: "${BUILD_PIPELINE_NAME}"
          ATC External URL: "${ATC_EXTERNAL_URL}"

      put: alert
      params:
        status: success
        text: |
         [$BUILD_PIPELINE_NAME/BUILD_JOB_NAME #$BUILD_NAME]($ATC_EXTERNAL_URL/builds/$BUILD_ID) success. :-)

    on_abort:
      put: send-an-email
      params:
        subject_text: "ci ${BUILD_PIPELINE_NAME}: build ${BUILD_ID} aborted!"
        body_text: |
          Uups!
          Build ID: "${BUILD_ID}"
          Build Name: "${BUILD_NAME}"
          Build Job Name: "${BUILD_JOB_NAME}"
          Build Pipeline Name: "${BUILD_PIPELINE_NAME}"
          ATC External URL: "${ATC_EXTERNAL_URL}"

      put: alert
      params:
        status: abort
        text: |
         [$BUILD_PIPELINE_NAME/BUILD_JOB_NAME #$BUILD_NAME]($ATC_EXTERNAL_URL/builds/$BUILD_ID) aborted. :-(

    on_failure:
      put: send-an-email
      params:
        subject_text: "ci ${BUILD_PIPELINE_NAME}: build ${BUILD_ID} failed!"
        body_text: |
          Oh no!
          Build ID: "${BUILD_ID}"
          Build Name: "${BUILD_NAME}"
          Build Job Name: "${BUILD_JOB_NAME}"
          Build Pipeline Name: "${BUILD_PIPELINE_NAME}"
          ATC External URL: "${ATC_EXTERNAL_URL}"

      put: alert
      params:
        status: failure
        text: |
         [$BUILD_PIPELINE_NAME/BUILD_JOB_NAME #$BUILD_NAME]($ATC_EXTERNAL_URL/builds/$BUILD_ID) failed. :-(

    plan:
      - in_parallel:
          - get: source
          - get: s3-gitversion
            passed: [Generate gitversion and put it on S3]
            trigger: true
            params:
              unpack: true
      - put: image-((bb_name))
        params:
          build: source/docker
          dockerfile: source/docker/Dockerfile
          tag_as_latest: ((bb_release_as_latest))
          tag_file: s3-gitversion/gitversion/plain/BranchVersion
